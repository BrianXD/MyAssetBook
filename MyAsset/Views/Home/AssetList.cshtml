@*Views/Web.config己有定義，這裡可以不用再using
@using MvcPaging*@
@model  IPagedList<MyAsset.Models.ViewModels.AssetViewModel>

@{
    //Child action 不要指定layout，避免產生不需要的Html tag
    //或是在Controller中return partial view也不會將layout加入頁面中
    //Layout = null; 這一行可以不用寫，因為已經return partial view了
    int i = 0;
}
@if (Model != null && Model.Count() > 0)
{
    //分頁後序號不會從 0 開使計算
    i = Model.PageSize * (Model.PageNumber - 1);

    <div class="pager">
        @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.Action("index"))
    </div>
    <table class="table table-striped table-bordered table-advance table-hover table-responsive assetList-table">
        <tr>
            <th>
                #
            </th>
            <th>
                類別
            </th>
            <th>
                日期
            </th>
            <th class="title-money">
                金額
            </th>
            <th class="title-remark">
                備註
            </th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>@(++i)</td>
                <td>@item.Category</td>
                <td>@item.CreatedDate.Value.ToString("yyyy-MM-dd")</td>
                <td class="bg-success text-right">@String.Format("{0:#,###}", @item.Money)</td>
                <td title="@item.Remark" class="remark">@(item.Remark.Length > 80 ? item.Remark.Substring(0, 79) + "..." : item.Remark)</td>
            </tr>
        }

    </table>
    <div class="pager">        
        @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.Action("index"))        
    </div>
   
}

