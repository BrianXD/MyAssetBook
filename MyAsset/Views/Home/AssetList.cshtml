@*Views/Web.config己有定義，這裡可以不用再using*@
@*@using MvcPaging*@
@using MyAsset.Helper

@model  IPagedList<MyAsset.Models.ViewModels.AssetViewModel>

@{
    //Child action 不要指定layout，避免產生不需要的Html tag
    //或是在Controller中return partial view也不會將layout加入頁面中
    //Layout = null; 這一行可以不用寫，因為已經return partial view了
    int i = 0;
}
 
    @if (!Model.Any())
    {
         <h2>沒有任何資料</h2>
        
    }
    else
    {
        //分頁後序號不會從 0 開使計算
        i = Model.PageSize * (Model.PageNumber - 1);
        <div class="pager">
            @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.Action("index"))
        </div>
        <table class="table table-striped table-bordered table-advance table-hover table-responsive assetList-table">
            <tr>
                <th>
                    #
                </th>
                <th>  
                    @*IPagedList 要用這個解法才能取出Display Name..但0筆會掛掉  *@
                    @Html.DisplayNameFor(d => d.FirstOrDefault().Category)
                    (html helper)
                </th>
                <th>
                    @Html.DisplayNameFor(d => d.FirstOrDefault().Category)
                    (razor)
                </th>
                <th>
                    @Html.DisplayNameFor(d => d.FirstOrDefault().CreatedDate)
                </th>
                <th class="title-money">
                    @Html.DisplayNameFor(d => d.FirstOrDefault().Money)
                </th>
                <th class="title-remark">
                    @Html.DisplayNameFor(d => d.FirstOrDefault().Remark)
                </th>
            </tr>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@(++i)</td>
                    <td>@Html.MyCategoryHtml(item.Category)</td>
                    <td class="@((item.Category == "支出") ? "redfont" : "bluefont")">@item.Category</td>
                    <td>@Html.DisplayFor(d => item.CreatedDate)</td>                
                    <td class="bg-success text-right">@Html.DisplayFor(d => item.Money)</td>
                    <td title="@item.Remark" class="remark">@(item.Remark.Length > 80 ? item.Remark.Substring(0, 79) + "..." : item.Remark)</td>
                </tr>
            }

        </table>
        <div class="pager">        
            @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.Action("index"))        
        </div>
   }



